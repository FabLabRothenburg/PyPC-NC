#! /usr/bin/python
from Control.MainWindow import ControlMainWindow
import Chat
import Chat.Backends

from PySide import QtGui, QtCore
import sys, os, fcntl
import argparse

if __name__ == "__main__":
	parser = argparse.ArgumentParser(description='Python GUI tool to drive a CNC controller')
	parser.add_argument('--mock', '-m', action='store_true', help='use mock backend, instead of serial')
	parser.add_argument('--device', '-D', default='/dev/ttyS0', help='set device name')
	parser.add_argument('--file', '-f', help='file to automatically open on start')
	parser.add_argument('--control', '-c', help='mouse device to use as control device')

	args = parser.parse_args()
	log = Chat.ChatLog()

	if args.mock:
		cb = Chat.Backends.ChatBackendMock(log)
	else:
		cb = Chat.Backends.ChatBackendSerial(log, args.device)

	translator = QtCore.QTranslator()
	mydir = os.path.dirname(os.path.realpath(__file__))
	translator.load(mydir + '/i18n/' + QtCore.QLocale.system().name())

	app = QtGui.QApplication(sys.argv)
	app.installTranslator(translator)

	mainwin = ControlMainWindow(cb)
	mainwin.show()

	if args.file:
		mainwin.importGCodeFromFile(args.file)

	if args.control:
		fd = os.open(args.control, os.O_RDWR)
		os.write(fd, "\xF3\xC8\xF3\x64\xF3\x50") # enable wheel mode
		notifier = QtCore.QSocketNotifier(fd, QtCore.QSocketNotifier.Read)
		notifier.activated.connect(mainwin.readControlEvent)

	if not args.mock:
		serial_moni = QtCore.QSocketNotifier(cb.fileno(), QtCore.QSocketNotifier.Read)
		serial_moni.activated.connect(mainwin.pollStatus)

	sys.exit(app.exec_())

